__asm__(
".hidden memcpy\n"
".hidden memset\n"
".hidden memmove\n"
);

__asm__(
".hidden _longjmp\n"
".hidden longjmp\n"
".hidden __setjmp\n"
".hidden _setjmp\n"
".hidden setjmp\n"
".hidden sigsetjmp\n"
".hidden __sigsetjmp\n"
);

#if defined(__riscv) // (
__asm__(
".hidden __longjmp\n"
);
#endif // )

#if defined(__amd64__) // (
__asm__(
".hidden acosl\n"
".hidden asinl\n"
".hidden atan2l\n"
".hidden atanl\n"
".hidden expm1l\n"
".hidden exp2l\n"
".hidden expl\n"
".hidden floorl\n"
".hidden ceill\n"
".hidden truncl\n"
".hidden log10l\n"
".hidden log1pl\n"
".hidden log2l\n"
".hidden logl\n"
);
#elif defined(__i386__) // ) (
__asm__(
".hidden acos\n"
".hidden acosf\n"
".hidden acosl\n"
".hidden asin\n"
".hidden asinf\n"
".hidden asinl\n"
".hidden atan\n"
".hidden atan2\n"
".hidden atan2f\n"
".hidden atan2l\n"
".hidden atanf\n"
".hidden atanl\n"
".hidden ceil\n"
".hidden ceilf\n"
".hidden ceill\n"
".hidden exp2l\n"
".hidden expl\n"
".hidden expm1l\n"
".hidden fabs\n"
".hidden fabsf\n"
".hidden fabsl\n"
".hidden floor\n"
".hidden floorf\n"
".hidden floorl\n"
".hidden fmodl\n"
".hidden hypot\n"
".hidden hypotf\n"
".hidden ldexp\n"
".hidden ldexpf\n"
".hidden ldexpl\n"
".hidden llrint\n"
".hidden llrintf\n"
".hidden llrintl\n"
".hidden log\n"
".hidden log10\n"
".hidden log10f\n"
".hidden log10l\n"
".hidden log1p\n"
".hidden log1pf\n"
".hidden log1pl\n"
".hidden log2\n"
".hidden log2f\n"
".hidden log2l\n"
".hidden logf\n"
".hidden logl\n"
".hidden lrint\n"
".hidden lrintf\n"
".hidden lrintl\n"
".hidden remainderl\n"
".hidden remquo\n"
".hidden remquof\n"
".hidden remquol\n"
".hidden rintl\n"
".hidden scalbln\n"
".hidden scalblnf\n"
".hidden scalblnl\n"
".hidden scalbn\n"
".hidden scalbnf\n"
".hidden scalbnl\n"
".hidden sqrt\n"
".hidden sqrtf\n"
".hidden sqrtl\n"
".hidden trunc\n"
".hidden truncf\n"
".hidden truncl\n"
);
#endif // )
